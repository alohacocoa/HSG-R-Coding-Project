debugSource('~/OneDrive - Università della Svizzera italiana/aStudents/02 Financial Programming/RMaster slidesAndCode/04 Rmaster/code04.R', echo=TRUE)
debugSource('~/OneDrive - Università della Svizzera italiana/aStudents/02 Financial Programming/RMaster slidesAndCode/04 Rmaster/code04.R', echo=TRUE)
debugSource('~/OneDrive - Università della Svizzera italiana/aStudents/02 Financial Programming/RMaster slidesAndCode/04 Rmaster/code04.R', echo=TRUE)
source('~/OneDrive - Università della Svizzera italiana/aStudents/02 Financial Programming/RMaster slidesAndCode/04 Rmaster/code04.R', echo=TRUE)
options(digits=16)
t1 <- proc.time()
while ( e>tol ) {
x  <- 1/2*(x+S/x)  # iteration
e  <- abs(x-S/x)   # error
step <- step + 1
# print( c(step,x,e) )
}
(proc.time()-t1)[3]   # Total time passed
(proc.time()-t1)[1]   # Processor time
t1 <- proc.time()
while ( e>tol ) {
x  <- 1/2*(x+S/x)  # iteration
e  <- abs(x-S/x)   # error
step <- step + 1
# print( c(step,x,e) )
}
(proc.time()-t1)[3]   # Total time passed
(proc.time()-t1)[1]   # Processor time
x  <- 1e6    # initial guess
e  <- abs(x-S/x)   # error
step <- 0
t1 <- proc.time()
while ( e>tol ) {
x  <- 1/2*(x+S/x)  # iteration
e  <- abs(x-S/x)   # error
step <- step + 1
# print( c(step,x,e) )
}
(proc.time()-t1)[3]   # Total time passed
(proc.time()-t1)[1]   # Processor time
x  <- 1e6    # initial guess
e  <- abs(x-S/x)   # error
step <- 0
t1 <- proc.time()
while ( e>tol ) {
x  <- 1/2*(x+S/x)  # iteration
e  <- abs(x-S/x)   # error
step <- step + 1
# print( c(step,x,e) )
}
(proc.time()-t1)[3]   # Total time passed
(proc.time()-t1)[1]   # Processor time
x  <- 1e6    # initial guess
e  <- abs(x-S/x)   # error
step <- 0
t1 <- proc.time()
while ( e>tol ) {
x  <- 1/2*(x+S/x)  # iteration
e  <- abs(x-S/x)   # error
step <- step + 1
# print( c(step,x,e) )
}
(proc.time()-t1)[3]   # Total time passed
(proc.time()-t1)[1]   # Processor time
install.packages("microbenchmark")
library("microbenchmark", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
x <- runif(10000)
A<-matrix(x,nrow=100)
microbenchmark(
solve(A)
)
x <- runif(100000)
A<-matrix(x,nrow=100)
microbenchmark(
solve(A)
)
x <- runif(1000000)
A<-matrix(x,nrow=1000)
microbenchmark(
solve(A)
)
x <- runif(40000)
A<-matrix(x,nrow=200)
microbenchmark(
solve(A)
)
x <- runif(40000)
A<-matrix(x,nrow=200)
microbenchmark(
solve(A)
)
x <- runif(40000)
A<-matrix(x,nrow=200)
microbenchmark(
solve(A)
)
install.packages("microbenchmark")
library("microbenchmark", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
x <- runif(40000)
A<-matrix(x,nrow=200)
microbenchmark(
solve(A)
)
x <- runif(40000)
A<-matrix(x,nrow=200)
microbenchmark(
solve(A)
)
x <- runif(40000)
A<-matrix(x,nrow=200)
microbenchmark(
solve(A)
)
x <- runif(40000)
A<-matrix(x,nrow=200)
microbenchmark(
solve(A)
)
library("microbenchmark", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
x <- runif(40000)
A<-matrix(x,nrow=200)
microbenchmark(
solve(A)
)
x <- runif(40000)
A<-matrix(x,nrow=200)
microbenchmark(
solve(A)
)
x <- runif(10000)
A<-matrix(x,nrow=100)
microbenchmark(
solve(A)
)
x <- runif(10000)
A<-matrix(x,nrow=100)
microbenchmark(
solve(A)
)
x <- runif(10000)
A<-matrix(x,nrow=100)
microbenchmark(
solve(A)
)
install.packages("blscrapeR")
library(devtools)
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("devtools")
https://github.com/keberwein/blscrapeR
library(devtools)
devtools::install_github("keberwein/blscrapeR")
km2 <- if (coin_flipped==1) {
print(20)
} else {print(0)}
coin_flipped <-1
km2 <- if (coin_flipped==1) {
print(20)
} else {print(0)}
km2
coin_flipped <-1
coin_flipped <-0
km2 <- if (coin_flipped==1) {
print(20)
} else {print(0)}
km2
install.packages("ggplot2")
install.packages("shiny")
library(rbenchmark)
foo<-matrix(runif(1000*1000),nrow=1000)
benchmark(foo^-1, repl=10)
install.packages("rbenchmark")
library(rbenchmark)
foo<-matrix(runif(1000*1000),nrow=1000)
benchmark(foo^-1, repl=10)
library(rbenchmark)
foo<-matrix(runif(1000*1000),nrow=1000)
benchmark(foo^-1, repl=10)
library(rbenchmark)
foo<-matrix(runif(1000*1000),nrow=1000)
benchmark(foo^-1, repl=10)
library(rbenchmark)
foo<-matrix(runif(1000*1000),nrow=1000)
benchmark(foo^-1, repl=10)
library(rbenchmark)
foo<-matrix(runif(2000*2000),nrow=2000)
benchmark(foo^-1, repl=10)
x <- runif(1000000)
A<-matrix(x,nrow=1000)
microbenchmark(
+ solve(A)
+ )
x <- runif(1000000)
A<-matrix(x,nrow=1000)
microbenchmark(solve(A))
library(microbenchmark)
x <- runif(1000000)
A<-matrix(x,nrow=1000)
microbenchmark(solve(A))
x <- runif(1000000)
A<-matrix(x,nrow=1000)
microbenchmark(solve(A))
for (u in 1:10) {x[u] <- u^2}
u
x
rm(x)
for (u in 1:10) {x[u] <- u^2}
x <- NA
for (u in 1:10) {x[u] <- u^2}
shiny::runApp('Dropbox/PassOnIntern/CODE')
shiny::runApp('OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyFirst')
runApp('OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyFirst')
runApp('OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyFirst')
runApp('OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyFirst')
rm(list = ls())
graphics.off()
library(ggplot2)
load("Student.RData")
ggplot(data = grade, aes_string(x = "math", y = "stats", col = "gender")) +
geom_point(size=3) + xlim(2.5,6.5) + ylim(2.5,6.5) + coord_fixed()
setwd("~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents")
rm(list = ls())
graphics.off()
library(ggplot2)
load("Student.RData")
ggplot(data = grade, aes_string(x = "math", y = "stats", col = "gender")) +
geom_point(size=3) + xlim(2.5,6.5) + ylim(2.5,6.5) + coord_fixed()
# this makes the following possible
varOfInterest <- "stats"
ggplot(data = grade, aes_string(x = "math", y = varOfInterest, col = "gender")) +
geom_point(size=3) + xlim(2.5,6.5) + ylim(2.5,6.5) + coord_fixed()
# this makes the following possible
varOfInterest <- "arts"
ggplot(data = grade, aes_string(x = "math", y = varOfInterest, col = "gender")) +
geom_point(size=3) + xlim(2.5,6.5) + ylim(2.5,6.5) + coord_fixed()
str(grade)
# so far
ggplot(data = grade, aes(x = math, y = stats, col = gender)) +
geom_point(size=3) + xlim(2.5,6.5) + ylim(2.5,6.5) + coord_fixed()
# slightly new command: aes_string requires quotation marks
ggplot(data = grade, aes_string(x = "math", y = "stats", col = "gender")) +
geom_point(size=3) + xlim(2.5,6.5) + ylim(2.5,6.5) + coord_fixed()
# this makes the following possible
myXvariable <- "math"
myYvariable <- "stats"
ggplot(data = grade, aes_string(x = myXvariable, y = myYvariable, col = "gender")) +
geom_point(size=3) + xlim(2.5,6.5) + ylim(2.5,6.5) + coord_fixed()
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
setwd("~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents")
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
?plotOutput
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
?selectInput
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents/app_solution.R')
setwd("~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling")
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
?xlim
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Rosling plots/version3.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Rosling plots/version3.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Rosling plots/version3.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Rosling plots/version3.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Rosling plots/version2.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Rosling plots/version2.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Rosling plots/version2.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
setwd("~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling")
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution1.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution1.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
? animationOptions
?animationOptions
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution1.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution1.R')
load("Rosling.RData")
str(dataToPlot)
dataToPlot[isna(dataToPlot$life_expectancy),]
dataToPlot[is.na(dataToPlot$life_expectancy),]
sum(is.na(dataToPlot$life_expectancy)
)
sum(is.na(dataToPlot$fertility_rate)
)
sum(is.na(dataToPlot$gdp_per_capita)
)
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution1.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution1.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
install.packages("DT")
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
?renderDataTable
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/rosling/app_solution.R')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents01')
setwd("~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents01")
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents01')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents01')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents03')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents03')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents03')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents03')
?numericInput
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code 04/ShinyStudents03')
## 2 Import data via a package
# The world bank package
?wbstats
# Type ctrl-L to clear the console
rm(list=ls())                   # Delete all variables
setwd("~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/03 ColorData")
# Type ctrl-L to clear the console
rm(list=ls())                   # Delete all variables
Sys.setenv(LANG = "en")         # Set language to English
# Load the necessary libraries
# install.packages("wbstats")
library(wbstats)
# install.packages("lubridate")
library(lubridate)
library(ggplot2)
# install.packages("packcircles")
library(packcircles)
## (1) Import data from "Excel"
# 1.1 Go https://data.snb.ch/en/publishingSet/B
# 1.2 Click on "Banknotes and coins in circulation"
# 1.3 Download the CSV(all) File
# 1.4 Move the file to the working directoriy
# 1.5 Have a look at the file
# 1.6 Copy the filename to a variable called SNBfile
SNBfile <- "snb-data-snbnomu-en-all-20180221_0900.csv"  # solution
read.csv(SNBfile)
# --> Does not look nice
# CSV files are not standardized
# Open the CSV file in a text editor
SNB <- read.csv(SNBfile, sep=";", skip=2)
# Is R happy about the data?
str(SNB)
# A bit of data gymnastics
SNB$DateStart <- paste0(as.character(SNB$Date),"-01")
SNB$date <- as.Date(SNB$DateStart)
str(SNB)
summary(SNB)
# Let us now create a line plot
ggplot(SNB, aes(x = date, y = Value, color = D0)) + geom_line()
# As the bank notes add up to the narrow money supply ...
# ... maybe a stacked area chart is better here
ggplot(SNB, aes(x = date, y = Value, fill = D0)) +
geom_area(position = position_stack())
# Let us permanently remove "T" from the dataset
# Operator  Meaning
#     <     smaller
#     >     larger
#    ==     equal
#    !=     not equal
#   %in%    is part of set
SNB <- subset(SNB, D0 != "T")
ggplot(SNB, aes(x = date, y = Value, fill = D0)) +
geom_area(position = position_stack())
# Need to change the ordering
# Define a new, ordered, factor
SNB$denom <- factor(SNB$D0, levels=c("M","5", "10", "20",
"50","100","200","500","1000"), ordered=TRUE)
# Plot again
ggplot(SNB, aes(x = date, y = Value, fill = denom)) +
geom_area(position = position_stack())
# Almost there
# Note how the order of the area changes, but the legend not!
ggplot(SNB, aes(x = date, y = Value, fill = denom)) +
geom_area(position = position_stack( reverse = T))
## 2 Import data via a package
# The world bank package
?wbstats
?wbstats
browseVignettes(package = "wbstats")
str(wb_cachelist, max.level = 1)
str(wb_cachelist, max.level = 2)
# Some cross-sectional data
pop <- wb(country = "countries_only", indicator = 'SP.POP.TOTL', startdate = 2012, enddate = 2012)
View(pop)
# Some cross-sectional data
pop <- wb(country = "countries_only", indicator = 'SP.POP.TOTL', startdate = 2018, enddate = 2018)
# Some cross-sectional data
pop <- wb(country = "countries_only", indicator = 'SP.POP.TOTL', startdate = 2018, enddate = 2018)
# Some cross-sectional data
pop <- wb(country = "countries_only", indicator = 'SP.POP.TOTL', startdate = 2017, enddate = 2017)
# Some cross-sectional data
pop <- wb(country = "countries_only", indicator = 'SP.POP.TOTL', startdate = 2017, enddate = 2017)
# World population
sum(pop$value)
# better text output
worldPop <- sum(pop$value)
format( worldPop, big.mark="'")
format( worldPop, big.mark=".", decimal.mark = ",")
# How is it distributed?
ggplot(data=pop, aes(x=value)) + geom_histogram()
ggplot(data=pop, aes(x=value)) + geom_histogram() +
scale_x_log10()
# bubble plot
p <- circleProgressiveLayout(pop$value)
d <- circleLayoutVertices(p)
ggplot(d, aes(x, y)) +
geom_polygon(aes(group = id)) +
coord_fixed() + theme_void()
# Let us now sort the dataset
popSorted <- pop[order(pop$value),]
head(popSorted)
tail(popSorted)
p <- circleProgressiveLayout(popSorted$value)
d <- circleLayoutVertices(p)
ggplot(d, aes(x, y)) +
geom_polygon(aes(group = id)) +
coord_fixed() + theme_void()
# And reverse sorting
popDesc <- pop[order(-pop$value),]
head(popDesc)
p <- circleProgressiveLayout(popDesc$value)
d <- circleLayoutVertices(p)
ggplot(d, aes(x, y)) +
geom_polygon(aes(group = id)) +
coord_fixed() + theme_void()
# And let us add some colors and a few labels
myLabelShort <- popDesc$iso3c
myLabelLong <- popDesc$country
ggplot(d, aes(x, y)) +
geom_polygon(aes(group = id),
colour = "white", fill="grey", show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = myLabelShort) +
scale_fill_distiller(palette = "Blues", direction = 1) +
theme_void() + coord_fixed()
myLabel[popDesc$value<20000000]=""
myLabel[popDesc$value<20000000]=""
ggplot(d, aes(x, y)) +
geom_polygon(aes(group = id),
colour = "white", fill="grey", show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = myLabel) +
scale_fill_distiller(palette = "Blues", direction = 1) +
theme_void() + coord_fixed()
# So ... maybe just the legends for the large countries?
myLabel <- myLabelShort
myLabel[popDesc$value<20000000]=""
ggplot(d, aes(x, y)) +
geom_polygon(aes(group = id),
colour = "white", fill="grey", show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = myLabel) +
scale_fill_distiller(palette = "Blues", direction = 1) +
theme_void() + coord_fixed()
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyFirst')
1+1
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyFirst')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyFirst')
setwd("~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents01")
rm(list = ls())
graphics.off()
library(ggplot2)
load("Student.RData")
# so far
ggplot(data = grade, aes(x = math, y = stats, col = gender)) +
geom_point(size=3) + xlim(2.5,6.5) + ylim(2.5,6.5) + coord_fixed()
# slightly new command: aes_string requires quotation marks
ggplot(data = grade, aes_string(x = "math", y = "stats", col = "gender")) +
geom_point(size=3) + xlim(2.5,6.5) + ylim(2.5,6.5) + coord_fixed()
# this makes the following possible
myXvariable <- "math"
myYvariable <- "stats"
ggplot(data = grade, aes_string(x = myXvariable, y = myYvariable, col = "gender")) +
geom_point(size=3) + xlim(2.5,6.5) + ylim(2.5,6.5) + coord_fixed()
# this makes the following possible
myXvariable <- "econ"
myYvariable <- "arts"
ggplot(data = grade, aes_string(x = myXvariable, y = myYvariable, col = "gender")) +
geom_point(size=3) + xlim(2.5,6.5) + ylim(2.5,6.5) + coord_fixed()
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents01')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents01')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents01')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents01')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents01')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents01')
setwd("~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents02")
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents02')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents02')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents02')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents02')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents02')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents02')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents02')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents02')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents02')
runApp('~/OneDrive - Università della Svizzera italiana/aStudents/06 Visualization/aa CODE/04 Shiny/Code04/ShinyStudents02')
